plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.4'
	id "com.github.node-gradle.node" version "3.5.0"
}

group = 'a.orquerab'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

//Node section to identify working directory for project , npm and node and its modules so that runtime will identify
//these paths to verify required plugins/modules
node {
	download = false
	// identify working directory in project
	workDir = file("${project.projectDir}/src/frontend/fitnexus-ui/nodejs")
	// NPM work directory
	npmWorkDir = file("${project.projectDir}/src/frontend/fitnexus-ui/npm")
	// node modules directory
	nodeModulesDir = file("${project.projectDir}/src/frontend/fitnexus-ui")
}

//Tasks to npm install and build , so that when we run spring boot app it will run these tasks and creates build
tasks.register('appNpmInstall', NpmTask) {
	description = "Read package.json and install all jars"
	workingDir = file("${project.projectDir}/src/frontend/fitnexus-ui")
	args = ["install"]
	//args =["install", " - debug"]
}
tasks.register('appNpmBuild', NpmTask) {
	description = "Builds application for your frontend"
	workingDir = file("${project.projectDir}/src/frontend/fitnexus-ui")
	args = ["run", "build"]
}

//task to copy created build from path (react app path inside spring boot ) to spring boot build path
//so that it recognizes the files built
tasks.register('copyToFrontend', Copy) {
	from '$projectDir/src/frontend/fitnexus-ui/build/'
	into '$buildDir/resources/main/static'
}

//Add sequence of tasks need to executed in gradle
//appNpmInstall → appNpmBuild → copyToFrontend → compileJava
appNpmBuild.dependsOn appNpmInstall
copyToFrontend.dependsOn appNpmBuild
compileJava.dependsOn copyToFrontend

tasks.named('test') {
	useJUnitPlatform()
}
